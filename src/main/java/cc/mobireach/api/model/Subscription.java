package cc.mobireach.api.model;
// Generated 24-Oct-2016 18:15:56 by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Subscription generated by hbm2java
 */
@Entity
@Table(name = "Subscription", catalog = "estorywo_webapp")
public class Subscription implements java.io.Serializable {

	private Integer subscriptionId;
	private Brand brand;
	private Member member;
	private int loyaltyPoints;
	private Date registrationDate;
	private Date lastPurchaseDate;
	private Date lastRedeemedDate;
	private boolean active;
	private Set<LoyaltyTransaction> loyaltyTransactions = new HashSet<LoyaltyTransaction>(0);

	public Subscription() {
	}

	public Subscription(Brand brand, Member member, int loyaltyPoints, Date registrationDate, boolean active) {
		this.brand = brand;
		this.member = member;
		this.loyaltyPoints = loyaltyPoints;
		this.registrationDate = registrationDate;
		this.active = active;
	}

	public Subscription(Brand brand, Member member, int loyaltyPoints, Date registrationDate, Date lastPurchaseDate,
			Date lastRedeemedDate, boolean active, Set<LoyaltyTransaction> loyaltyTransactions) {
		this.brand = brand;
		this.member = member;
		this.loyaltyPoints = loyaltyPoints;
		this.registrationDate = registrationDate;
		this.lastPurchaseDate = lastPurchaseDate;
		this.lastRedeemedDate = lastRedeemedDate;
		this.active = active;
		this.loyaltyTransactions = loyaltyTransactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "subscriptionId", unique = true, nullable = false)
	public Integer getSubscriptionId() {
		return this.subscriptionId;
	}

	public void setSubscriptionId(Integer subscriptionId) {
		this.subscriptionId = subscriptionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "brandId", nullable = false)
	public Brand getBrand() {
		return this.brand;
	}

	public void setBrand(Brand brand) {
		this.brand = brand;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "memberId", nullable = false)
	public Member getMember() {
		return this.member;
	}

	public void setMember(Member member) {
		this.member = member;
	}

	@Column(name = "loyaltyPoints", nullable = false)
	public int getLoyaltyPoints() {
		return this.loyaltyPoints;
	}

	public void setLoyaltyPoints(int loyaltyPoints) {
		this.loyaltyPoints = loyaltyPoints;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "registrationDate", nullable = false, length = 19)
	public Date getRegistrationDate() {
		return this.registrationDate;
	}

	public void setRegistrationDate(Date registrationDate) {
		this.registrationDate = registrationDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastPurchaseDate", length = 19)
	public Date getLastPurchaseDate() {
		return this.lastPurchaseDate;
	}

	public void setLastPurchaseDate(Date lastPurchaseDate) {
		this.lastPurchaseDate = lastPurchaseDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastRedeemedDate", length = 19)
	public Date getLastRedeemedDate() {
		return this.lastRedeemedDate;
	}

	public void setLastRedeemedDate(Date lastRedeemedDate) {
		this.lastRedeemedDate = lastRedeemedDate;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "subscription")
	public Set<LoyaltyTransaction> getLoyaltyTransactions() {
		return this.loyaltyTransactions;
	}

	public void setLoyaltyTransactions(Set<LoyaltyTransaction> loyaltyTransactions) {
		this.loyaltyTransactions = loyaltyTransactions;
	}

}
