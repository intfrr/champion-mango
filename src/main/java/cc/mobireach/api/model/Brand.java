package cc.mobireach.api.model;
// Generated 24-Oct-2016 18:15:56 by Hibernate Tools 5.2.0.Beta1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Brand generated by hbm2java
 */
@Entity
@Table(name = "Brand", catalog = "estorywo_webapp", uniqueConstraints = @UniqueConstraint(columnNames = "brandName"))
public class Brand implements java.io.Serializable {

	private Integer brandId;
	private SalesRep salesRep;
	private String brandName;
	private String contactName;
	private Long contactPhone;
	private String contactEmail;
	private Long billingPhone;
	private String billingEmail;
	private String billingPassword;
	private boolean active;
	private Set<Store> stores = new HashSet<Store>(0);
	private Set<BrandAdmin> brandAdmins = new HashSet<BrandAdmin>(0);
	private Set<Subscription> subscriptions = new HashSet<Subscription>(0);

	public Brand() {
	}

	public Brand(String brandName, boolean active) {
		this.brandName = brandName;
		this.active = active;
	}

	public Brand(SalesRep salesRep, String brandName, String contactName, Long contactPhone, String contactEmail,
			Long billingPhone, String billingEmail, String billingPassword, boolean active, Set<Store> stores,
			Set<BrandAdmin> brandAdmins, Set<Subscription> subscriptions) {
		this.salesRep = salesRep;
		this.brandName = brandName;
		this.contactName = contactName;
		this.contactPhone = contactPhone;
		this.contactEmail = contactEmail;
		this.billingPhone = billingPhone;
		this.billingEmail = billingEmail;
		this.billingPassword = billingPassword;
		this.active = active;
		this.stores = stores;
		this.brandAdmins = brandAdmins;
		this.subscriptions = subscriptions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "brandId", unique = true, nullable = false)
	public Integer getBrandId() {
		return this.brandId;
	}

	public void setBrandId(Integer brandId) {
		this.brandId = brandId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "repId")
	public SalesRep getSalesRep() {
		return this.salesRep;
	}

	public void setSalesRep(SalesRep salesRep) {
		this.salesRep = salesRep;
	}

	@Column(name = "brandName", unique = true, nullable = false, length = 45)
	public String getBrandName() {
		return this.brandName;
	}

	public void setBrandName(String brandName) {
		this.brandName = brandName;
	}

	@Column(name = "contactName", length = 100)
	public String getContactName() {
		return this.contactName;
	}

	public void setContactName(String contactName) {
		this.contactName = contactName;
	}

	@Column(name = "contactPhone")
	public Long getContactPhone() {
		return this.contactPhone;
	}

	public void setContactPhone(Long contactPhone) {
		this.contactPhone = contactPhone;
	}

	@Column(name = "contactEmail", length = 100)
	public String getContactEmail() {
		return this.contactEmail;
	}

	public void setContactEmail(String contactEmail) {
		this.contactEmail = contactEmail;
	}

	@Column(name = "billingPhone")
	public Long getBillingPhone() {
		return this.billingPhone;
	}

	public void setBillingPhone(Long billingPhone) {
		this.billingPhone = billingPhone;
	}

	@Column(name = "billingEmail", length = 100)
	public String getBillingEmail() {
		return this.billingEmail;
	}

	public void setBillingEmail(String billingEmail) {
		this.billingEmail = billingEmail;
	}

	@Column(name = "billingPassword", length = 45)
	public String getBillingPassword() {
		return this.billingPassword;
	}

	public void setBillingPassword(String billingPassword) {
		this.billingPassword = billingPassword;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "brand")
	public Set<Store> getStores() {
		return this.stores;
	}

	public void setStores(Set<Store> stores) {
		this.stores = stores;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "brand")
	public Set<BrandAdmin> getBrandAdmins() {
		return this.brandAdmins;
	}

	public void setBrandAdmins(Set<BrandAdmin> brandAdmins) {
		this.brandAdmins = brandAdmins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "brand")
	public Set<Subscription> getSubscriptions() {
		return this.subscriptions;
	}

	public void setSubscriptions(Set<Subscription> subscriptions) {
		this.subscriptions = subscriptions;
	}

}
