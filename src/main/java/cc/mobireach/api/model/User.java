package cc.mobireach.api.model;
// Generated 24-Oct-2016 18:15:56 by Hibernate Tools 5.2.0.Beta1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "User", catalog = "estorywo_webapp", uniqueConstraints = @UniqueConstraint(columnNames = "username"))
public class User implements java.io.Serializable {

	private Integer userId;
	private UserType userType;
	private String username;
	private String password;
	private String name;
	private String email;
	private String phone;
	private byte[] image;
	private Date createDate;
	private boolean loggedIn;
	private Date lastLoginDate;
	private Boolean enabled;
	private Set<Admin> admins = new HashSet<Admin>(0);
	private Set<Member> members = new HashSet<Member>(0);
	private Set<Operator> operators = new HashSet<Operator>(0);
	private Set<BrandAdmin> brandAdmins = new HashSet<BrandAdmin>(0);
	private Set<Notification> notifications = new HashSet<Notification>(0);

	public User() {
	}

	public User(User user) {
		this.userType = user.getUserType();
		this.username = user.getUsername();
		this.password = user.getPassword();
		this.name = user.getName();
		this.createDate = user.getCreateDate();
		this.loggedIn = user.isLoggedIn();
	}

	public User(UserType userType, String username, String password, String name, Date createDate, boolean loggedIn) {
		this.userType = userType;
		this.username = username;
		this.password = password;
		this.name = name;
		this.createDate = createDate;
		this.loggedIn = loggedIn;
	}

	public User(UserType userType, String username, String password, String name, String email, String phone,
			byte[] image, Date createDate, boolean loggedIn, Date lastLoginDate, Boolean enabled, Set<Admin> admins,
			Set<Member> members, Set<Operator> operators, Set<BrandAdmin> brandAdmins,
			Set<Notification> notifications) {
		this.userType = userType;
		this.username = username;
		this.password = password;
		this.name = name;
		this.email = email;
		this.phone = phone;
		this.image = image;
		this.createDate = createDate;
		this.loggedIn = loggedIn;
		this.lastLoginDate = lastLoginDate;
		this.enabled = enabled;
		this.admins = admins;
		this.members = members;
		this.operators = operators;
		this.brandAdmins = brandAdmins;
		this.notifications = notifications;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "userId", unique = true, nullable = false)
	public Integer getUserId() {
		return this.userId;
	}

	public void setUserId(Integer userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "userTypeId", unique = true, nullable = false)
	public UserType getUserType() {
		return this.userType;
	}

	public void setUserType(UserType userType) {
		this.userType = userType;
	}

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "password", nullable = false, length = 100)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "phone", length = 45)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "image")
	public byte[] getImage() {
		return this.image;
	}

	public void setImage(byte[] image) {
		this.image = image;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createDate", nullable = false, length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "loggedIn", nullable = false)
	public boolean isLoggedIn() {
		return this.loggedIn;
	}

	public void setLoggedIn(boolean loggedIn) {
		this.loggedIn = loggedIn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "lastLoginDate", length = 19)
	public Date getLastLoginDate() {
		return this.lastLoginDate;
	}

	public void setLastLoginDate(Date lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	@Column(name = "enabled")
	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Admin> getAdmins() {
		return this.admins;
	}

	public void setAdmins(Set<Admin> admins) {
		this.admins = admins;
	}

	@JsonManagedReference
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Member> getMembers() {
		return this.members;
	}

	public void setMembers(Set<Member> members) {
		this.members = members;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Operator> getOperators() {
		return this.operators;
	}

	public void setOperators(Set<Operator> operators) {
		this.operators = operators;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<BrandAdmin> getBrandAdmins() {
		return this.brandAdmins;
	}

	public void setBrandAdmins(Set<BrandAdmin> brandAdmins) {
		this.brandAdmins = brandAdmins;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set<Notification> getNotifications() {
		return this.notifications;
	}

	public void setNotifications(Set<Notification> notifications) {
		this.notifications = notifications;
	}

}
