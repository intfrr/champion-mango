package cc.mobireach.api.model;
// Generated 24-Oct-2016 18:15:56 by Hibernate Tools 5.2.0.Beta1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LoyaltyTransaction generated by hbm2java
 */
@Entity
@Table(name = "LoyaltyTransaction", catalog = "estorywo_webapp")
public class LoyaltyTransaction implements java.io.Serializable {

	private Integer transactionId;
	private LoyaltyTransactionType loyaltyTransactionType;
	private Operator operator;
	private Store store;
	private Subscription subscription;
	private double transactionAmount;
	private double openingBalance;
	private double points;
	private String notes;
	private Date transactionDate;

	public LoyaltyTransaction() {
	}

	public LoyaltyTransaction(LoyaltyTransactionType loyaltyTransactionType, Operator operator, Store store,
			Subscription subscription, double transactionAmount, double openingBalance, double points,
			Date transactionDate) {
		this.loyaltyTransactionType = loyaltyTransactionType;
		this.operator = operator;
		this.store = store;
		this.subscription = subscription;
		this.transactionAmount = transactionAmount;
		this.openingBalance = openingBalance;
		this.points = points;
		this.transactionDate = transactionDate;
	}

	public LoyaltyTransaction(LoyaltyTransactionType loyaltyTransactionType, Operator operator, Store store,
			Subscription subscription, double transactionAmount, double openingBalance, double points, String notes,
			Date transactionDate) {
		this.loyaltyTransactionType = loyaltyTransactionType;
		this.operator = operator;
		this.store = store;
		this.subscription = subscription;
		this.transactionAmount = transactionAmount;
		this.openingBalance = openingBalance;
		this.points = points;
		this.notes = notes;
		this.transactionDate = transactionDate;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "transactionId", unique = true, nullable = false)
	public Integer getTransactionId() {
		return this.transactionId;
	}

	public void setTransactionId(Integer transactionId) {
		this.transactionId = transactionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "transactionTypeId", nullable = false)
	public LoyaltyTransactionType getLoyaltyTransactionType() {
		return this.loyaltyTransactionType;
	}

	public void setLoyaltyTransactionType(LoyaltyTransactionType loyaltyTransactionType) {
		this.loyaltyTransactionType = loyaltyTransactionType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "operatorId", nullable = false)
	public Operator getOperator() {
		return this.operator;
	}

	public void setOperator(Operator operator) {
		this.operator = operator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "storeId", nullable = false)
	public Store getStore() {
		return this.store;
	}

	public void setStore(Store store) {
		this.store = store;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "subscriptionId", nullable = false)
	public Subscription getSubscription() {
		return this.subscription;
	}

	public void setSubscription(Subscription subscription) {
		this.subscription = subscription;
	}

	@Column(name = "transactionAmount", nullable = false, precision = 22, scale = 0)
	public double getTransactionAmount() {
		return this.transactionAmount;
	}

	public void setTransactionAmount(double transactionAmount) {
		this.transactionAmount = transactionAmount;
	}

	@Column(name = "openingBalance", nullable = false, precision = 22, scale = 0)
	public double getOpeningBalance() {
		return this.openingBalance;
	}

	public void setOpeningBalance(double openingBalance) {
		this.openingBalance = openingBalance;
	}

	@Column(name = "points", nullable = false, precision = 22, scale = 0)
	public double getPoints() {
		return this.points;
	}

	public void setPoints(double points) {
		this.points = points;
	}

	@Column(name = "notes", length = 100)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "transactionDate", nullable = false, length = 19)
	public Date getTransactionDate() {
		return this.transactionDate;
	}

	public void setTransactionDate(Date transactionDate) {
		this.transactionDate = transactionDate;
	}

}
